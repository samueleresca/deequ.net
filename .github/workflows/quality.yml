name: deequ.NET

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    tests-linux:
        runs-on: ubuntu-latest
        env:
            DOTNET_WORKER_DIR: /usr/local/bin/
            SPARK_RUNNER_DIR: /home/runner/bin/
        steps:
            -   uses: actions/checkout@v2
            -   name: Setup .NET Core
                uses: actions/setup-dotnet@v1
                with:
                    dotnet-version: 3.1.101
            -   name: Install dependencies
                run: dotnet restore
            -   name: Build
                run: dotnet build --configuration Release --no-restore
            -   name: Scripts permissions
                run: chmod +x deploy/install-worker.sh && chmod +x deploy/download-spark.sh
            -   name: Download OpenJDK
                uses: sormuras/download-jdk@v1
                with:
                    feature: 8
            -   name: Install Apache Spark
                run: deploy/download-spark.sh /home/runner/bin/
            -   name: Install .NET Worker
                run: deploy/install-worker.sh github https://github.com/dotnet/spark/releases/download/v0.12.1/Microsoft.Spark.Worker.netcoreapp3.1.linux-x64-0.12.1.tar.gz /usr/local/bin/
            -   name: Run tests
                run: dotnet test --collect:"XPlat Code Coverage" /p:CoverletOutput=coverage/ /p:CoverletOutputFormat=json
            -   name: Upload coverage
                uses: codecov/codecov-action@v1.0.11
                with:
                    name: deequ.NET
                    token: ${{ secrets.CODECOV_TOKEN }}
                    fail_ci_if_error: true
    publish-nuget:
        runs-on: ubuntu-latest
        env:
            DOTNET_WORKER_DIR: /usr/local/bin/
            SPARK_RUNNER_DIR: /home/runner/bin/
        steps:
            - uses: actions/checkout@v1

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: 3.1.100

            - name: Build
              run: dotnet build --configuration Release
              working-directory: ./src

            - name: Run unit tests
              run: dotnet test --configuration Release
              working-directory: ./src

            - name: Generate nuget package
              run: dotnet pack --configuration Release -o nupkg
              working-directory: ./src

            - name: Publish nuget package
              run: find . -name *.nupkg -type f -print0 | xargs -0 -I pkg dotnet nuget push pkg -k $nuget_api_key -s "https://api.nuget.org/v3/index.json" --skip-duplicate
              env:
                  nuget_api_key: ${{ secrets.NUGET_API_KEY }}
              working-directory: ./src/nupkg
#    tests-windows:
#        runs-on: windows-latest
#        env:
#            DOTNET_WORKER_DIR: c:\bin\Microsoft.Spark.Worker\
#            HOME: c:\
#        steps:
#            -   uses: actions/checkout@v2
#            -   name: Setup .NET Core
#                uses: actions/setup-dotnet@v1
#                with:
#                    dotnet-version: 3.1.101
#            -   name: Install dependencies
#                run: dotnet restore
#            -   name: Build
#                run: dotnet build --configuration Release --no-restore
#            -   name: Scripts permissions
#                run: chmod +x deploy/install-worker.sh && chmod +x deploy/download-spark.sh
#            -   name: Install Apache Spark
#                run: bash deploy/download-spark.sh c:\bin\
#            -   name: Install .NET Worker
#                run: deploy/install-worker.cmd c:\bin\Microsoft.Spark.Worker\ 0.9.0
#            -   name: Run tests
#                run: dotnet test -v d --collect:"XPlat Code Coverage" /p:CoverletOutput=coverage/ /p:CoverletOutputFormat=json
#            -   name: Upload coverage
#                uses: codecov/codecov-action@v1.0.11
#                with:
#                    name: deequ.NET
#                    token: ${{ secrets.CODECOV_TOKEN }}
#                    fail_ci_if_error: true
